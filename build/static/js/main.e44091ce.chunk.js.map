{"version":3,"sources":["img/img.jpg","routes.js","components/Navigation.js","pages/HomePage.js","services/tv-api-service.js","components/NotfoundFilms.js","components/Searchbar.js","pages/MoviesPage.js","components/Loader.js","components/ErrorNotification.js","components/Cast.js","components/Reviews.js","pages/MoviesDetailsPage.js","components/App.js","index.js"],"names":["module","exports","Navigation","className","exact","to","routes","style","color","activeStyle","HomePage","state","results","fetch","then","res","json","data","setState","this","map","result","key","id","name","title","Component","fetchMovieWithQuery","searchQuery","fetchMovieDetails","movieId","fetchCredits","cast","fetchReviews","NotfoundFilms","src","img","alt","Searchbar","value","onChange","e","target","onSubmit","preventDefault","props","onSearch","type","MoviesPage","setSearchQuery","history","push","location","search","query","URLSearchParams","get","tvApiService","prevProps","prevQuery","nextQuery","match","length","url","LOADER_ROOT","document","querySelector","Loader","createPortal","ErrorNotification","message","Cast","isLoading","error","getCredits","catch","finally","movieID","params","person","cast_id","profile_path","width","character","Reviews","reviews","review","author","content","MoviesDetailsPage","fetchDetails","moveToPreviousPage","goBack","onClick","poster_path","original_title","overview","vote_average","genres","el","join","path","component","App","HomePages","ReactDOM","render","getElementById"],"mappings":"8EAAAA,EAAOC,QAAU,IAA0B,iC,4JCA5B,EACP,IADO,EAEL,SAFK,EAGE,kBC2BFC,EA1BI,kBACjB,wBAAIC,UAAU,QACZ,wBAAIA,UAAU,WACZ,kBAAC,IAAD,CACEC,OAAK,EACLC,GAAIC,EACJH,UAAU,UACVI,MAAO,CAAEC,MAAO,SAChBC,YAAa,CAAED,MAAO,QALxB,SAUF,wBAAIL,UAAU,WACZ,kBAAC,IAAD,CACEE,GAAIC,EACJH,UAAU,UACVI,MAAO,CAAEC,MAAO,SAChBC,YAAa,CAAED,MAAO,QAJxB,a,mCCfeE,E,2MACnBC,MAAQ,CACNC,QAAS,I,mFAGU,IAAD,OAClBC,MACE,0FAECC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACJ,EAAKC,SAAS,CAAEN,QAASK,EAAKL,e,+BAI1B,IACAA,EAAYO,KAAKR,MAAjBC,QACR,OACE,6BACE,wBAAIT,UAAU,WACd,8CACA,4BACGS,EAAQQ,KAAI,SAAAC,GAAM,OACjB,wBAAIC,IAAKD,EAAOE,IACd,kBAAC,IAAD,CAAMlB,GAAE,iBAAYgB,EAAOE,KACxBF,EAAOG,KACPH,EAAOI,iB,GA1BcC,a,QC+BvB,GACbC,oBA7B0B,SAAAC,GAC1B,OAAOf,MAAM,2GAAD,OACiGe,EADjG,gCAGTd,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GAAI,OAAIA,EAAKL,YAyBrBiB,kBApCwB,SAAAC,GACxB,OAAOjB,MAAM,sCAAD,OAC4BiB,EAD5B,6DAEVhB,MAAK,SAAAC,GAAG,OAAIA,EAAIC,WAkClBe,aAvBmB,SAAAR,GACnB,OAAOV,MAAM,sCAAD,OAC4BU,EAD5B,sDAGTT,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACJ,OAAOA,EAAKe,SAkBhBC,aAdmB,SAAAV,GACnB,OAAOV,MAAM,sCAAD,OAC4BU,EAD5B,sDAGTT,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACJ,OAAOA,EAAKL,a,iBCrBHsB,EANO,kBACpB,6BACE,yBAAKC,IAAKC,IAAKjC,UAAU,MAAMkC,IAAI,oBCFlBC,E,2MAKnB3B,MAAQ,CAAE4B,MAAO,I,EAEjBC,SAAW,SAAAC,GACT,EAAKvB,SAAS,CAAEqB,MAAOE,EAAEC,OAAOH,S,EAGlCI,SAAW,SAAAF,GACTA,EAAEG,iBAEF,EAAKC,MAAMC,SAAS,EAAKnC,MAAM4B,OAC/B,EAAKrB,SAAS,CAAEqB,MAAO,M,wEAGf,IACAA,EAAUpB,KAAKR,MAAf4B,MACR,OACE,0BAAMI,SAAUxB,KAAKwB,UACnB,2BACEI,KAAK,OACLR,MAAOA,EACPC,SAAUrB,KAAKqB,SACfrC,UAAU,UAEZ,4BAAQ4C,KAAK,UAAb,e,GA5B+BrB,a,kOCIlBsB,E,2MAiBnBrC,MAAQ,CACNC,QAAS,I,EAgCXqC,eAAiB,SAAArB,GACf,EAAKiB,MAAMK,QAAQC,K,yVAAnB,IACK,EAAKN,MAAMO,SADhB,CAEEC,OAAO,SAAD,OAAWzB,O,mFAhCA,IAAD,OACVwB,EAAajC,KAAK0B,MAAlBO,SACFE,EAAQ,IAAIC,gBAAgBH,EAASC,QAAQG,IAAI,SAElDF,GAILG,EAAa9B,oBAAoB2B,GAAOxC,MAAK,SAAAF,GAC3C,EAAKM,SAAS,CAAEN,iB,yCAID8C,GAAY,IAAD,OACpBN,EAAajC,KAAK0B,MAAlBO,SACFO,EAAY,IAAIJ,gBAAgBG,EAAUN,SAASC,QAAQG,IAC/D,SAEII,EAAY,IAAIL,gBAAgBH,EAASC,QAAQG,IAAI,SAEvDG,IAAcC,GAIlBH,EAAa9B,oBAAoBiC,GAAW9C,MAAK,SAAAF,GAC/C,EAAKM,SAAS,CAAEN,iB,+BAWV,IACAA,EAAYO,KAAKR,MAAjBC,QACAiD,EAAU1C,KAAK0B,MAAfgB,MACR,OACE,6BACE,0CACA,kBAAC,EAAD,CAAWf,SAAU3B,KAAK8B,iBACzBrC,EAAQkD,QAAU,GAAK,kBAAC,EAAD,MACxB,4BACGlD,EAAQQ,KAAI,SAAAC,GAAM,OACjB,wBAAIC,IAAKD,EAAOE,IACd,kBAAC,IAAD,CAAMlB,GAAE,UAAKwD,EAAME,IAAX,YAAkB1C,EAAOE,KAC9BF,EAAOG,KACPH,EAAOI,iB,GAtEgBC,aCJlCsC,EAAcC,SAASC,cAAc,gBAQ5BC,EANA,kBACbC,uBACE,yBAAKjE,UAAU,UAAf,+BACA6D,ICJWK,EAFW,SAAAC,GAAO,OAAI,uCAAaA,ICI7BC,E,2MASnB5D,MAAQ,CACNqB,KAAM,KACNwC,WAAW,EACXC,MAAO,M,EAUTC,WAAa,SAAAnD,GACX,EAAKL,SAAS,CAAEsD,WAAW,IAC3Bf,EACG1B,aAAaR,GACbT,MAAK,SAAAkB,GACJ,EAAKd,SAAS,CACZc,YAGH2C,OAAM,SAAAF,GACL,EAAKvD,SAAS,CACZuD,aAGHG,SAAQ,WACP,EAAK1D,SAAS,CACZsD,WAAW,Q,mFAvBE,IAEbK,EADY1D,KAAK0B,MAAfgB,MACciB,OAAOhD,QAE7BX,KAAKuD,WAAWG,K,+BAwBR,IAAD,EAC4B1D,KAAKR,MAAhCqB,EADD,EACCA,KAAMwC,EADP,EACOA,UAAWC,EADlB,EACkBA,MACzB,OACE,6BAAStE,UAAU,QAChBsE,GAAS,kBAAC,EAAD,CAAmBH,QAASG,EAAMH,UAC3CE,GAAa,kBAAC,EAAD,MACd,oCACCxC,GACC,wBAAI7B,UAAU,YACX6B,EAAKZ,KAAI,SAAA2D,GAAM,OACd,wBAAIzD,IAAKyD,EAAOC,QAAS7E,UAAU,gBACjC,4BACEsB,MAAM,uBACNR,KAAI,0CAAqC8D,EAAOE,cAChDlC,KAAK,YACLmC,MAAM,QAER,uBAAG/E,UAAU,gBAAgB4E,EAAOvD,MACpC,yCAAeuD,EAAOI,qB,GA7DJzD,aCAb0D,E,2MAWnBzE,MAAQ,CACN0E,QAAS,GACTb,WAAW,EACXC,MAAO,M,EASTC,WAAa,SAAAnD,GACX,EAAKL,SAAS,CAAEsD,WAAW,IAC3Bf,EACGxB,aAAaV,GACbT,MAAK,SAAAuE,GACJ,EAAKnE,SAAS,CACZmE,eAGHV,OAAM,SAAAF,GACL,EAAKvD,SAAS,CACZuD,aAGHG,SAAQ,WACP,EAAK1D,SAAS,CACZsD,WAAW,Q,mFAtBE,IAEbK,EADY1D,KAAK0B,MAAfgB,MACciB,OAAOhD,QAC7BX,KAAKuD,WAAWG,K,+BAwBR,IAAD,EAC+B1D,KAAKR,MAAnC0E,EADD,EACCA,QAASb,EADV,EACUA,UAAWC,EADrB,EACqBA,MAE5B,OACE,6BAAStE,UAAU,WAChBsE,GAAS,kBAAC,EAAD,CAAmBH,QAASG,EAAMH,UAC3CE,GAAa,kBAAC,EAAD,MACd,uCACCa,GACC,wBAAIlF,UAAU,eACXkF,EAAQjE,KAAI,SAAAkE,GAAM,OACjB,wBAAIhE,IAAKgE,EAAO/D,IACd,uCAAa+D,EAAOC,QACpB,+BAAKD,EAAOE,QAAZ,UAKY,IAAnBH,EAAQvB,QAAgB,uE,GA9DIpC,aCGhB+D,E,2MAYnB9E,MAAQ,CAAEU,OAAQ,KAAMmD,WAAW,EAAOC,MAAO,M,EAMjDiB,aAAe,WAAO,IACZ5D,EAAY,EAAKe,MAAMgB,MAAMiB,OAA7BhD,QACR,EAAKZ,SAAS,CAAEsD,WAAW,IAC3Bf,EACG5B,kBAAkBC,GAClBhB,MAAK,SAAAO,GACJ,EAAKH,SAAS,CAAEG,cAEjBsD,OAAM,SAAAF,GACL,EAAKvD,SAAS,CACZuD,aAGHG,SAAQ,WACP,EAAK1D,SAAS,CACZsD,WAAW,Q,EAKnBmB,mBAAqB,WACC,EAAK9C,MAAjBK,QACA0C,U,mFAzBRzE,KAAKuE,iB,+BA4BG,IAAD,EAC8BvE,KAAKR,MAAlCU,EADD,EACCA,OAAQmD,EADT,EACSA,UAAWC,EADpB,EACoBA,MACnBZ,EAAU1C,KAAK0B,MAAfgB,MACR,OACE,iCACGY,GAAS,kBAAC,EAAD,CAAmBH,QAASG,EAAMH,UAC3CE,GAAa,kBAAC,EAAD,MACd,wBAAIrE,UAAU,WACd,wBAAIA,UAAU,cAAd,iBAECkB,GACC,oCACE,4BACElB,UAAU,cACV0F,QAAS1E,KAAKwE,mBACd5C,KAAK,UAHP,kBAOA,yBAAK5C,UAAU,oBACb,yBACEgC,IAAG,0CAAqCd,EAAOyE,aAC/CzD,IAAKhB,EAAOI,MACZtB,UAAU,cAEZ,yBAAKA,UAAU,gBACb,4BAAKkB,EAAO0E,gBACZ,2BACE,uCACA,6BAFF,IAEU1E,EAAO2E,UAEjB,2BACE,4CADF,IAC8C,GAAtB3E,EAAO4E,aAD/B,MAGA,2BACE,sCADF,IACiB,6BACd5E,EAAO6E,OACJ7E,EAAO6E,OAAO9E,KAAI,SAAA+E,GAAE,OAAIA,EAAG3E,QAAM4E,KAAK,MACtC,+BAIV,wBAAIjG,UAAU,WACd,yBAAKA,UAAU,sBACb,sDACA,wBAAIA,UAAU,gBACZ,4BACE,kBAAC,IAAD,CAAME,GAAE,UAAKwD,EAAME,IAAX,UAAR,WAEF,4BACE,kBAAC,IAAD,CAAM1D,GAAE,UAAKwD,EAAME,IAAX,aAAR,eAGJ,wBAAI5D,UAAU,WACd,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOkG,KAAI,UAAKxC,EAAMwC,KAAX,SAAwBC,UAAW/B,IAC9C,kBAAC,IAAD,CAAO8B,KAAI,UAAKxC,EAAMwC,KAAX,YAA2BC,UAAWlB,Y,GAnGlB1D,aCehC6E,EAfH,kBACV,kBAAC,IAAD,KACE,yBAAKpG,UAAU,OACb,kBAAC,EAAD,MAEA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACiG,KAAM/F,EAAagG,UAAWE,IAC3C,kBAAC,IAAD,CAAOH,KAAM/F,EAAsBgG,UAAWb,IAC9C,kBAAC,IAAD,CAAOY,KAAM/F,EAAegG,UAAWtD,IACvC,kBAAC,IAAD,CAAU3C,GAAG,UCbrBoG,IAASC,OAAO,kBAAC,EAAD,MAASzC,SAAS0C,eAAe,W","file":"static/js/main.e44091ce.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/img.aef89ac2.jpg\";","export default {\n  HOME: '/',\n  MOVIES: '/movie',\n  MOVIE_DETAILS: '/movie/:movieId',\n  CAST: '/movies/:movieId/cast',\n  REVIEWS: '/movies/:movieId/reviews',\n};\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport routes from '../routes';\n\nconst Navigation = () => (\n  <ul className=\"list\">\n    <li className=\"navlist\">\n      <NavLink\n        exact\n        to={routes.HOME}\n        className=\"navlink\"\n        style={{ color: 'black' }}\n        activeStyle={{ color: 'red' }}\n      >\n        Home\n      </NavLink>\n    </li>\n    <li className=\"navlist\">\n      <NavLink\n        to={routes.MOVIES}\n        className=\"navlink\"\n        style={{ color: 'black' }}\n        activeStyle={{ color: 'red' }}\n      >\n        Movies\n      </NavLink>\n    </li>\n  </ul>\n);\n\nexport default Navigation;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nexport default class HomePage extends Component {\n  state = {\n    results: [],\n  };\n\n  componentDidMount() {\n    fetch(\n      'https://api.themoviedb.org/3/trending/all/day?api_key=5f7ac1b9f858cfa7079e5dbc9197589b',\n    )\n      .then(res => res.json())\n      .then(data => {\n        this.setState({ results: data.results });\n      });\n  }\n\n  render() {\n    const { results } = this.state;\n    return (\n      <div>\n        <hr className=\"hrline\" />\n        <h1>Trending today</h1>\n        <ul>\n          {results.map(result => (\n            <li key={result.id}>\n              <Link to={`/movie/${result.id}`}>\n                {result.name}\n                {result.title}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n","const fetchMovieDetails = movieId => {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${movieId}?api_key=5f7ac1b9f858cfa7079e5dbc9197589b&language=en-US`,\n  ).then(res => res.json());\n};\n\nconst fetchMovieWithQuery = searchQuery => {\n  return fetch(\n    `https://api.themoviedb.org/3/search/movie?api_key=5f7ac1b9f858cfa7079e5dbc9197589b&language=en-US&query=${searchQuery}&page=1&include_adult=false`,\n  )\n    .then(res => res.json())\n    .then(data => data.results);\n};\n\nconst fetchCredits = id => {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${id}/credits?api_key=5f7ac1b9f858cfa7079e5dbc9197589b`,\n  )\n    .then(res => res.json())\n    .then(data => {\n      return data.cast;\n    });\n};\n\nconst fetchReviews = id => {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=5f7ac1b9f858cfa7079e5dbc9197589b`,\n  )\n    .then(res => res.json())\n    .then(data => {\n      return data.results;\n    });\n};\n\nexport default {\n  fetchMovieWithQuery,\n  fetchMovieDetails,\n  fetchCredits,\n  fetchReviews,\n};\n","import React from 'react';\nimport img from '../img/img.jpg';\n\nconst NotfoundFilms = () => (\n  <div>\n    <img src={img} className=\"img\" alt=\"img_not_found\" />\n  </div>\n);\n\nexport default NotfoundFilms;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class Searchbar extends Component {\n  static propTypes = {\n    onSearch: PropTypes.func.isRequired,\n  };\n\n  state = { value: '' };\n\n  onChange = e => {\n    this.setState({ value: e.target.value });\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n\n    this.props.onSearch(this.state.value);\n    this.setState({ value: '' });\n  };\n\n  render() {\n    const { value } = this.state;\n    return (\n      <form onSubmit={this.onSubmit}>\n        <input\n          type=\"text\"\n          value={value}\n          onChange={this.onChange}\n          className=\"input\"\n        />\n        <button type=\"submit\">Search</button>\n      </form>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport tvApiService from '../services/tv-api-service';\nimport NotfoundFilms from '../components/NotfoundFilms';\nimport Searchbar from '../components/Searchbar';\n\nexport default class MoviesPage extends Component {\n  static propTypes = {\n    history: PropTypes.shape({\n      push: PropTypes.func.isRequired,\n    }).isRequired,\n    location: PropTypes.shape({\n      pathname: PropTypes.string.isRequired,\n      search: PropTypes.string.isRequired,\n      key: PropTypes.string.isRequired,\n    }).isRequired,\n    match: PropTypes.shape({\n      params: PropTypes.shape({ movieId: PropTypes.string }),\n      path: PropTypes.string.isRequired,\n      url: PropTypes.string.isRequired,\n    }).isRequired,\n  };\n\n  state = {\n    results: [],\n  };\n\n  componentDidMount() {\n    const { location } = this.props;\n    const query = new URLSearchParams(location.search).get('query');\n\n    if (!query) {\n      return;\n    }\n\n    tvApiService.fetchMovieWithQuery(query).then(results => {\n      this.setState({ results });\n    });\n  }\n\n  componentDidUpdate(prevProps) {\n    const { location } = this.props;\n    const prevQuery = new URLSearchParams(prevProps.location.search).get(\n      'query',\n    );\n    const nextQuery = new URLSearchParams(location.search).get('query');\n\n    if (prevQuery === nextQuery) {\n      return;\n    }\n\n    tvApiService.fetchMovieWithQuery(nextQuery).then(results => {\n      this.setState({ results });\n    });\n  }\n\n  setSearchQuery = searchQuery => {\n    this.props.history.push({\n      ...this.props.location,\n      search: `query=${searchQuery}`,\n    });\n  };\n\n  render() {\n    const { results } = this.state;\n    const { match } = this.props;\n    return (\n      <div>\n        <h1>Movie page</h1>\n        <Searchbar onSearch={this.setSearchQuery} />\n        {results.length <= 0 && <NotfoundFilms />}\n        <ul>\n          {results.map(result => (\n            <li key={result.id}>\n              <Link to={`${match.url}/${result.id}`}>\n                {result.name}\n                {result.title}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { createPortal } from 'react-dom';\n\nconst LOADER_ROOT = document.querySelector('#loader-root');\n\nconst Loader = () =>\n  createPortal(\n    <div className=\"loader\">Waiting! Page is loading...</div>,\n    LOADER_ROOT,\n  );\n\nexport default Loader;\n","import React from 'react';\n\nconst ErrorNotification = message => <div>Error: {message}</div>;\n\nexport default ErrorNotification;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport tvApiService from '../services/tv-api-service';\nimport Loader from './Loader';\nimport ErrorNotification from './ErrorNotification';\n\nexport default class Cast extends Component {\n  static propTypes = {\n    match: PropTypes.shape({\n      params: PropTypes.shape({ movieId: PropTypes.string.isRequired }),\n      path: PropTypes.string.isRequired,\n      url: PropTypes.string.isRequired,\n    }).isRequired,\n  };\n\n  state = {\n    cast: null,\n    isLoading: false,\n    error: null,\n  };\n\n  componentDidMount() {\n    const { match } = this.props;\n    const movieID = match.params.movieId;\n\n    this.getCredits(movieID);\n  }\n\n  getCredits = id => {\n    this.setState({ isLoading: true });\n    tvApiService\n      .fetchCredits(id)\n      .then(cast => {\n        this.setState({\n          cast,\n        });\n      })\n      .catch(error => {\n        this.setState({\n          error,\n        });\n      })\n      .finally(() => {\n        this.setState({\n          isLoading: false,\n        });\n      });\n  };\n\n  render() {\n    const { cast, isLoading, error } = this.state;\n    return (\n      <section className=\"cast\">\n        {error && <ErrorNotification message={error.message} />}\n        {isLoading && <Loader />}\n        <h2>Cast</h2>\n        {cast && (\n          <ul className=\"castList\">\n            {cast.map(person => (\n              <li key={person.cast_id} className=\"castListItem\">\n                <object\n                  title=\"This object has text\"\n                  data={`https://image.tmdb.org/t/p/w500/${person.profile_path}`}\n                  type=\"image/png\"\n                  width=\"100\"\n                />\n                <p className=\"castListName\">{person.name}</p>\n                <p> Character:{person.character}</p>\n              </li>\n            ))}\n          </ul>\n        )}\n      </section>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport tvApiService from '../services/tv-api-service';\nimport Loader from './Loader';\nimport ErrorNotification from './ErrorNotification';\n\nexport default class Reviews extends Component {\n  static propTypes = {\n    match: PropTypes.shape({\n      params: PropTypes.shape({\n        movieId: PropTypes.string.isRequired,\n      }),\n      path: PropTypes.string.isRequired,\n      url: PropTypes.string.isRequired,\n    }).isRequired,\n  };\n\n  state = {\n    reviews: [],\n    isLoading: false,\n    error: null,\n  };\n\n  componentDidMount() {\n    const { match } = this.props;\n    const movieID = match.params.movieId;\n    this.getCredits(movieID);\n  }\n\n  getCredits = id => {\n    this.setState({ isLoading: true });\n    tvApiService\n      .fetchReviews(id)\n      .then(reviews => {\n        this.setState({\n          reviews,\n        });\n      })\n      .catch(error => {\n        this.setState({\n          error,\n        });\n      })\n      .finally(() => {\n        this.setState({\n          isLoading: false,\n        });\n      });\n  };\n\n  render() {\n    const { reviews, isLoading, error } = this.state;\n\n    return (\n      <section className=\"reviews\">\n        {error && <ErrorNotification message={error.message} />}\n        {isLoading && <Loader />}\n        <h2>Reviews</h2>\n        {reviews && (\n          <ul className=\"reviewsList\">\n            {reviews.map(review => (\n              <li key={review.id}>\n                <h3>Author: {review.author}</h3>\n                <p>`{review.content}`</p>\n              </li>\n            ))}\n          </ul>\n        )}\n        {reviews.length === 0 && <p>There are no reviews for this movie</p>}\n      </section>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Link, Route, Switch } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport tvApiService from '../services/tv-api-service';\nimport Loader from '../components/Loader';\nimport ErrorNotification from '../components/ErrorNotification';\nimport Cast from '../components/Cast';\nimport Reviews from '../components/Reviews';\n\nexport default class MoviesDetailsPage extends Component {\n  static propTypes = {\n    history: PropTypes.shape({\n      goBack: PropTypes.func.isRequired,\n    }).isRequired,\n    match: PropTypes.shape({\n      params: PropTypes.shape({ movieId: PropTypes.string.isRequired }),\n      path: PropTypes.string.isRequired,\n      url: PropTypes.string.isRequired,\n    }).isRequired,\n  };\n\n  state = { result: null, isLoading: false, error: null };\n\n  componentDidMount() {\n    this.fetchDetails();\n  }\n\n  fetchDetails = () => {\n    const { movieId } = this.props.match.params;\n    this.setState({ isLoading: true });\n    tvApiService\n      .fetchMovieDetails(movieId)\n      .then(result => {\n        this.setState({ result });\n      })\n      .catch(error => {\n        this.setState({\n          error,\n        });\n      })\n      .finally(() => {\n        this.setState({\n          isLoading: false,\n        });\n      });\n  };\n\n  moveToPreviousPage = () => {\n    const { history } = this.props;\n    history.goBack();\n  };\n\n  render() {\n    const { result, isLoading, error } = this.state;\n    const { match } = this.props;\n    return (\n      <section>\n        {error && <ErrorNotification message={error.message} />}\n        {isLoading && <Loader />}\n        <hr className=\"hrline\" />\n        <h2 className=\"film_title\">Movie Details</h2>\n\n        {result && (\n          <>\n            <button\n              className=\"back_button\"\n              onClick={this.moveToPreviousPage}\n              type=\"button\"\n            >\n              ← GO BACK\n            </button>\n            <div className=\"film_description\">\n              <img\n                src={`https://image.tmdb.org/t/p/w300/${result.poster_path}`}\n                alt={result.title}\n                className=\"movie_img\"\n              />\n              <div className=\"film_details\">\n                <h1>{result.original_title}</h1>\n                <p>\n                  <b>Overview</b>\n                  <br /> {result.overview}\n                </p>\n                <p>\n                  <b>Vote average:</b> {result.vote_average * 10} %\n                </p>\n                <p>\n                  <b>Genres:</b> <br />\n                  {result.genres\n                    ? result.genres.map(el => el.name).join(', ')\n                    : 'No information about film'}\n                </p>\n              </div>\n            </div>\n            <hr className=\"hrline\" />\n            <div className=\"details_additional\">\n              <h2>Additional information</h2>\n              <ul className=\"details_list\">\n                <li>\n                  <Link to={`${match.url}/cast`}> Cast </Link>\n                </li>\n                <li>\n                  <Link to={`${match.url}/reviews`}> Reviews </Link>\n                </li>\n              </ul>\n              <hr className=\"hrline\" />\n              <Switch>\n                <Route path={`${match.path}/cast`} component={Cast} />\n                <Route path={`${match.path}/reviews`} component={Reviews} />\n              </Switch>\n            </div>\n          </>\n        )}\n      </section>\n    );\n  }\n}\n","import React from 'react';\r\nimport { BrowserRouter, Route, Switch, Redirect } from 'react-router-dom';\r\nimport Navigation from './Navigation';\r\n\r\nimport HomePages from '../pages/HomePage';\r\nimport MoviesPage from '../pages/MoviesPage';\r\nimport MoviesDetailsPage from '../pages/MoviesDetailsPage';\r\nimport routes from '../routes';\r\n\r\nconst App = () => (\r\n  <BrowserRouter>\r\n    <div className=\"App\">\r\n      <Navigation />\r\n\r\n      <Switch>\r\n        <Route exact path={routes.HOME} component={HomePages} />\r\n        <Route path={routes.MOVIE_DETAILS} component={MoviesDetailsPage} />\r\n        <Route path={routes.MOVIES} component={MoviesPage} />\r\n        <Redirect to=\"/\" />\r\n      </Switch>\r\n    </div>\r\n  </BrowserRouter>\r\n);\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}